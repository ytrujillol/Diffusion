load "Element_P4"
// Parameters
int inside = 2; 
int outside = 1;
real d=0.1;
func f = 1.0; //RHS
real rate = 0; //Convergence rate

int n = 4, k = 5; // n = number of refinements, points = # of points in each borders
real[int] L2error(n), H1error(n);
real[int] Ntraingles(n), Msize(n);
real auxH1, auxL2, auxH1sol, auxL2sol;
string namefile;

//Solucion "Exacta"

//Mesh
border b1(t=0, 1){x=0; y=-t; label=outside;};
border b2(t=0, 1){x=t; y=-1;label=outside;};
border b3(t=0, 1){x=1; y=t-1;label=outside;};
border b4(t=0, 1){x=1; y=t;label=outside;};
border b5(t=0, 1){x=-t+1; y=1;label=outside;};
border b6(t=0, 1){x=0; y=-t+1;label=outside;};

border b7(t=0, 1){x= 0 + 0.037037037037037035 *t ; y= 0 + 0.0 *t;label=inside;};
border b8(t=0, 1){x= 0.037037037037037035 + 0.018518518518518517 *t ; y= 0.0 + 0.032075014954979206 *t;label=inside;};
border b9(t=0, 1){x= 0.05555555555555555 + 0.018518518518518517 *t ; y= 0.032075014954979206 + -0.032075014954979206 *t;label=inside;};
border b10(t=0, 1){x= 0.07407407407407407 + 0.037037037037037035 *t ; y= 0.0 + 0.0 *t;label=inside;};
border b11(t=0, 1){x= 0.1111111111111111 + 0.018518518518518517 *t ; y= 0.0 + 0.032075014954979206 *t;label=inside;};
border b12(t=0, 1){x= 0.12962962962962962 + -0.018518518518518504 *t ; y= 0.032075014954979206 + 0.032075014954979233 *t;label=inside;};
border b13(t=0, 1){x= 0.11111111111111112 + 0.03703703703703705 *t ; y= 0.06415002990995844 + -2.7755575615628914e-17 *t;label=inside;};
border b14(t=0, 1){x= 0.14814814814814817 + 0.018518518518518517 *t ; y= 0.06415002990995841 + 0.032075014954979206 *t;label=inside;};
border b15(t=0, 1){x= 0.16666666666666669 + 0.018518518518518517 *t ; y= 0.09622504486493762 + -0.032075014954979206 *t;label=inside;};
border b16(t=0, 1){x= 0.1851851851851852 + 0.03703703703703701 *t ; y= 0.06415002990995841 + -2.7755575615628914e-17 *t;label=inside;};
border b17(t=0, 1){x= 0.2222222222222222 + -0.018518518518518517 *t ; y= 0.06415002990995838 + -0.03207501495497918 *t;label=inside;};
border b18(t=0, 1){x= 0.2037037037037037 + 0.018518518518518517 *t ; y= 0.032075014954979206 + -0.032075014954979206 *t;label=inside;};
border b19(t=0, 1){x= 0.2222222222222222 + 0.037037037037037035 *t ; y= 0.0 + 0.0 *t;label=inside;};
border b20(t=0, 1){x= 0.25925925925925924 + 0.018518518518518545 *t ; y= 0.0 + 0.032075014954979206 *t;label=inside;};
border b21(t=0, 1){x= 0.2777777777777778 + 0.01851851851851849 *t ; y= 0.032075014954979206 + -0.032075014954979206 *t;label=inside;};
border b22(t=0, 1){x= 0.2962962962962963 + 0.037037037037037035 *t ; y= 0.0 + 0.0 *t;label=inside;};
border b23(t=0, 1){x= 0.3333333333333333 + 0.018518518518518545 *t ; y= 0.0 + 0.03207501495497921 *t;label=inside;};
border b24(t=0, 1){x= 0.35185185185185186 + -0.018518518518518545 *t ; y= 0.03207501495497921 + 0.0320750149549792 *t;label=inside;};
border b25(t=0, 1){x= 0.3333333333333333 + 0.037037037037037035 *t ; y= 0.06415002990995841 + 2.7755575615628914e-17 *t;label=inside;};
border b26(t=0, 1){x= 0.37037037037037035 + 0.018518518518518545 *t ; y= 0.06415002990995844 + 0.032075014954979206 *t;label=inside;};
border b27(t=0, 1){x= 0.3888888888888889 + -0.018518518518518545 *t ; y= 0.09622504486493764 + 0.032075014954979206 *t;label=inside;};
border b28(t=0, 1){x= 0.37037037037037035 + -0.03703703703703698 *t ; y= 0.12830005981991685 + 0.0 *t;label=inside;};
border b29(t=0, 1){x= 0.33333333333333337 + 0.01851851851851849 *t ; y= 0.12830005981991685 + 0.03207501495497919 *t;label=inside;};
border b30(t=0, 1){x= 0.35185185185185186 + -0.018518518518518545 *t ; y= 0.16037507477489604 + 0.03207501495497919 *t;label=inside;};
border b31(t=0, 1){x= 0.3333333333333333 + 0.037037037037037035 *t ; y= 0.19245008972987523 + 0.0 *t;label=inside;};
border b32(t=0, 1){x= 0.37037037037037035 + 0.01851851851851849 *t ; y= 0.19245008972987523 + 0.03207501495497922 *t;label=inside;};
border b33(t=0, 1){x= 0.38888888888888884 + 0.018518518518518545 *t ; y= 0.22452510468485445 + -0.03207501495497919 *t;label=inside;};
border b34(t=0, 1){x= 0.4074074074074074 + 0.037037037037037035 *t ; y= 0.19245008972987526 + 0.0 *t;label=inside;};
border b35(t=0, 1){x= 0.4444444444444444 + 0.018518518518518545 *t ; y= 0.19245008972987526 + 0.03207501495497922 *t;label=inside;};
border b36(t=0, 1){x= 0.46296296296296297 + -0.018518518518518545 *t ; y= 0.22452510468485448 + 0.032075014954979164 *t;label=inside;};
border b37(t=0, 1){x= 0.4444444444444444 + 0.037037037037037035 *t ; y= 0.25660011963983365 + 5.551115123125783e-17 *t;label=inside;};
border b38(t=0, 1){x= 0.48148148148148145 + 0.018518518518518545 *t ; y= 0.2566001196398337 + 0.03207501495497922 *t;label=inside;};
border b39(t=0, 1){x= 0.5 + 0.01851851851851849 *t ; y= 0.2886751345948129 + -0.03207501495497922 *t;label=inside;};
border b40(t=0, 1){x= 0.5185185185185185 + 0.03703703703703709 *t ; y= 0.2566001196398337 + 5.551115123125783e-17 *t;label=inside;};
border b41(t=0, 1){x= 0.5555555555555556 + -0.01851851851851849 *t ; y= 0.25660011963983376 + -0.032075014954979275 *t;label=inside;};
border b42(t=0, 1){x= 0.5370370370370371 + 0.01851851851851849 *t ; y= 0.22452510468485448 + -0.03207501495497922 *t;label=inside;};
border b43(t=0, 1){x= 0.5555555555555556 + 0.03703703703703709 *t ; y= 0.19245008972987526 + 0.0 *t;label=inside;};
border b44(t=0, 1){x= 0.5925925925925927 + 0.01851851851851849 *t ; y= 0.19245008972987526 + 0.032075014954979164 *t;label=inside;};
border b45(t=0, 1){x= 0.6111111111111112 + 0.01851851851851849 *t ; y= 0.22452510468485443 + -0.032075014954979136 *t;label=inside;};
border b46(t=0, 1){x= 0.6296296296296297 + 0.03703703703703709 *t ; y= 0.1924500897298753 + 0.0 *t;label=inside;};
border b47(t=0, 1){x= 0.6666666666666667 + -0.01851851851851849 *t ; y= 0.1924500897298753 + -0.03207501495497922 *t;label=inside;};
border b48(t=0, 1){x= 0.6481481481481483 + 0.01851851851851849 *t ; y= 0.16037507477489607 + -0.0320750149549793 *t;label=inside;};
border b49(t=0, 1){x= 0.6666666666666667 + -0.03703703703703709 *t ; y= 0.12830005981991677 + 8.326672684688674e-17 *t;label=inside;};
border b50(t=0, 1){x= 0.6296296296296297 + -0.01851851851851849 *t ; y= 0.12830005981991685 + -0.032075014954979206 *t;label=inside;};
border b51(t=0, 1){x= 0.6111111111111112 + 0.01851851851851849 *t ; y= 0.09622504486493764 + -0.032075014954979206 *t;label=inside;};
border b52(t=0, 1){x= 0.6296296296296297 + 0.03703703703703709 *t ; y= 0.06415002990995844 + 5.551115123125783e-17 *t;label=inside;};
border b53(t=0, 1){x= 0.6666666666666667 + -0.01851851851851849 *t ; y= 0.0641500299099585 + -0.03207501495497928 *t;label=inside;};
border b54(t=0, 1){x= 0.6481481481481483 + 0.01851851851851849 *t ; y= 0.03207501495497921 + -0.03207501495497921 *t;label=inside;};
border b55(t=0, 1){x= 0.6666666666666667 + 0.03703703703703698 *t ; y= 0.0 + 0.0 *t;label=inside;};
border b56(t=0, 1){x= 0.7037037037037037 + 0.0185185185185186 *t ; y= 0.0 + 0.032075014954979254 *t;label=inside;};
border b57(t=0, 1){x= 0.7222222222222223 + 0.01851851851851849 *t ; y= 0.032075014954979254 + -0.032075014954979254 *t;label=inside;};
border b58(t=0, 1){x= 0.7407407407407408 + 0.03703703703703698 *t ; y= 0.0 + 0.0 *t;label=inside;};
border b59(t=0, 1){x= 0.7777777777777778 + 0.01851851851851849 *t ; y= 0.0 + 0.03207501495497922 *t;label=inside;};
border b60(t=0, 1){x= 0.7962962962962963 + -0.01851851851851849 *t ; y= 0.03207501495497922 + 0.03207501495497929 *t;label=inside;};
border b61(t=0, 1){x= 0.7777777777777778 + 0.03703703703703709 *t ; y= 0.06415002990995851 + -6.938893903907228e-17 *t;label=inside;};
border b62(t=0, 1){x= 0.8148148148148149 + 0.01851851851851849 *t ; y= 0.06415002990995844 + 0.03207501495497922 *t;label=inside;};
border b63(t=0, 1){x= 0.8333333333333334 + 0.01851851851851849 *t ; y= 0.09622504486493766 + -0.03207501495497922 *t;label=inside;};
border b64(t=0, 1){x= 0.8518518518518519 + 0.03703703703703709 *t ; y= 0.06415002990995844 + 6.938893903907228e-17 *t;label=inside;};
border b65(t=0, 1){x= 0.888888888888889 + -0.01851851851851849 *t ; y= 0.06415002990995851 + -0.03207501495497929 *t;label=inside;};
border b66(t=0, 1){x= 0.8703703703703705 + 0.01851851851851849 *t ; y= 0.03207501495497922 + -0.03207501495497922 *t;label=inside;};
border b67(t=0, 1){x= 0.888888888888889 + 0.03703703703703698 *t ; y= 0.0 + 0.0 *t;label=inside;};
border b68(t=0, 1){x= 0.9259259259259259 + 0.0185185185185186 *t ; y= 0.0 + 0.032075014954979254 *t;label=inside;};
border b69(t=0, 1){x= 0.9444444444444445 + 0.01851851851851849 *t ; y= 0.032075014954979254 + -0.032075014954979254 *t;label=inside;};
border b70(t=0, 1){x= 0.962962962962963 + 0.03703703703703698 *t ; y= 0.0 + 0.0 *t;label=inside;};


int m = 20;
mesh Th1 = buildmesh(b1(m) + b2(m) + b3(m) +  b4(m) + b5(m) + b6(m) +
b70(-m)+b69(-m)+b68(-m)+b67(-m)+b66(-m)+b65(-m)+b64(-m)+b63(-m)+b62(-m)+b61(-m)+b60(-m)+
b59(-m)+b58(-m)+b57(-m)+b56(-m)+b55(-m)+b54(-m)+b53(-m)+b52(-m)+b51(-m)+b50(-m)+b49(-m)+
b48(-m)+b47(-m)+b46(-m)+b45(-m)+b44(-m)+b43(-m)+b42(-m)+b41(-m)+b40(-m)+b39(-m)+b38(-m)+
b37(-m)+b36(-m)+b35(-m)+b34(-m)+b33(-m)+b32(-m)+b31(-m)+b30(-m)+b29(-m)+b28(-m)+b27(-m)+
b26(-m)+b25(-m)+b24(-m)+b23(-m)+b22(-m)+b21(-m)+b20(-m)+b19(-m)+b18(-m)+b17(-m)+b16(-m)+
b15(-m)+b14(-m)+b13(-m)+b12(-m)+b11(-m)+b10(-m)+b9(-m)+b8(-m)+b7(-m));

//plot(Th1, wait=true);

// Fespace
fespace Vh1(Th1, P4);
Vh1 usol, v1, dxusol, dyusol;

solve smoothcrack(usol, v1)
  = int2d(Th1)(dx(usol)*dx(v1) + dy(usol)*dy(v1))
  +int1d(Th1,inside)(-d*N.y*dx(usol)*dx(v1)+d*N.x*dy(usol)*dy(v1)) - int2d(Th1)(f*v1) + on(outside,usol=0);
//plot(usol, value=true, fill=true, wait=true);

dxusol=dx(usol);
dyusol=dy(usol);

mesh Th = buildmesh(b1(k) + b2(k) + b3(k) +  b4(k) + b5(k) + b6(k) +
b70(-k)+b69(-k)+b68(-k)+b67(-k)+b66(-k)+b65(-k)+b64(-k)+b63(-k)+b62(-k)+b61(-k)+b60(-k)+
b59(-k)+b58(-k)+b57(-k)+b56(-k)+b55(-k)+b54(-k)+b53(-k)+b52(-k)+b51(-k)+b50(-k)+b49(-k)+
b48(-k)+b47(-k)+b46(-k)+b45(-k)+b44(-k)+b43(-k)+b42(-k)+b41(-k)+b40(-k)+b39(-k)+b38(-k)+
b37(-k)+b36(-k)+b35(-k)+b34(-k)+b33(-k)+b32(-k)+b31(-k)+b30(-k)+b29(-k)+b28(-k)+b27(-k)+
b26(-k)+b25(-k)+b24(-k)+b23(-k)+b22(-k)+b21(-k)+b20(-k)+b19(-k)+b18(-k)+b17(-k)+b16(-k)+
b15(-k)+b14(-k)+b13(-k)+b12(-k)+b11(-k)+b10(-k)+b9(-k)+b8(-k)+b7(-k));

// Loop for refinements
for(int i = 0; i < n; i++){
    // Fespace
    fespace Vh(Th, P1);
    Vh  h = hTriangle;
    Msize[i] = h[].max;
    Vh u,v;
    // Problem
    solve smoothcrack(u, v)
    = int2d(Th)(dx(u)*dx(v) + dy(u)*dy(v))
    +int1d(Th,inside)(-d*N.y*dx(u)*dx(v)+d*N.x*dy(u)*dy(v) ) - int2d(Th)(f*v) + on(outside,u=0);
    //plot(u, value=true, fill=true, wait=true);

    auxL2 = int2d(Th)((u - usol)^2);
    auxL2sol = int2d(Th)((usol)^2);
    auxH1 = int2d(Th)((dx(u) - dxusol)^2 + (dy(u) - dyusol)^2);
    auxH1sol = int2d(Th)((dxusol)^2 + (dyusol)^2);
    L2error[i] = sqrt(auxL2/auxL2sol);
    H1error[i] = sqrt(auxL2 + auxH1) / sqrt(auxL2sol + auxH1sol);
    Ntraingles[i] = Th.nt;
    cout << "L2Error\t" << L2error[i] << endl;
    Th = trunc(Th,1,split=2); //refine mesh
    //plot(Th, wait=true);
  }

  //to build a data file
  {
    namefile = "dataK3.txt";
    ofstream ff(namefile);
    ff << "Number of Triangles\tL2Error\tH1Error\th" << endl;
    for(int i = 0; i < n; i++){
      ff << Ntraingles[i] << "\t" << L2error[i] << "\t" << H1error[i] << "\t" << Msize[i]<<endl;
    }
  }